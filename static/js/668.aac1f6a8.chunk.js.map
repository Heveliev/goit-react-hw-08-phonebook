{"version":3,"file":"static/js/668.aac1f6a8.chunk.js","mappings":"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","sources":["redux/contacts/contatcs-selectors.js","components/AddContacrForm/AddContacrForm.jsx","redux/filter/filter-select.js","redux/modal/modal-select.js","components/ModalWindow/ModalWindow.jsx","components/ContactList/ContactList.jsx","components/InputFilter/InputFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;","import { Grid, GridItem, Input, Button, Heading } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"redux/contacts/contatcs-selectors\";\nimport { addContact } from \"redux/contacts/contacts-thunk\";\nimport { Notify } from \"notiflix\";\n\nexport const AddContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget\n    const name = form.elements.name.value;\n   const number = form.elements.number.value;\n   if (!name || !number) {\n     Notify.failure('Sorry, but you didn&#180;t enter a value in the field')\n     return\n   }\n   if (contacts?.find(contact => contact.name === name)) {\n        Notify.info(`${name} is already in contacts.`);\n        return\n   }\n         dispatch(addContact({ name, number } ))\n    form.reset();\n\n\n\n  }\n\n\n    return (<>\n        <Heading textAlign=\"center\">Add contact to contacts list</Heading>\n    <form onSubmit={handleSubmit}>\n      <Grid\n        templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }}\n        gap={4}\n      >\n        <GridItem colSpan={{ base: \"auto\", md: 1 }}>\n          <Input\n        placeholder=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian,Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </GridItem>\n            <GridItem colSpan={{ base: \"auto\", md: 1 }}>\n          <Input\n              placeholder=\"Phone\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  />\n                  \n        </GridItem>\n        <GridItem textAlign=\"center\" colSpan={{ base: \"auto\", md: 2 }}>\n          <Button type=\"submit\">Add Contact</Button>\n        </GridItem>\n      </Grid>\n      </form>\n  </>\n  );\n}        ","export const getFilter = state => state.filter;","export const getIsOpen = state => state.modal","import {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    FormControl,\n    FormLabel,\n    Input,\n\n} from \"@chakra-ui/react\";\n import { Notify } from \"notiflix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editContact } from \"redux/contacts/contacts-thunk\";\nimport { getIsOpen } from \"redux/modal/modal-select\";\nimport { isOpen } from \"redux/modal/modal-slice\";\n\n\nexport function ModalWindow({name,number,id}) {\n    const open = useSelector(getIsOpen)\n    const dispatch = useDispatch();\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n         const form = evt.currentTarget\n    const name = form.elements.name.value;\n   const number = form.elements.number.value;\n   if (!name || !number) {\n     Notify.failure('Sorry, but you didn&#180;t enter a value in the field')\n     return\n        }\n    dispatch(editContact({ name:name, number:number, id }))\n        \n    form.reset();\n    }\n  return (\n      <Modal isOpen={open} onClose={()=>dispatch(isOpen())}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Please make changes</ModalHeader>\n              <ModalBody>\n                  <form onSubmit={handleSubmit}>\n           <FormControl>\n            <FormLabel>Name</FormLabel>\n                      <Input\n                                placeholder=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian,Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                          defaultValue={name}\n                      />\n          </FormControl>\n          <FormControl mt={4}>\n            <FormLabel>Number</FormLabel>\n                      <Input\n                               placeholder=\"Phone\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                          defaultValue={number}\n                      />\n                      </FormControl>\n                      <div style={{ display: 'flex', justifyContent: 'end', gap: '10px', margin: '10px' }} >\n                          <Button type=\"submit\" colorScheme=\"blue\" >Save</Button>\n\n                      <Button variant=\"outline\" mr={3} onClick={()=>dispatch(isOpen())}>\n            Cancel\n          </Button></div>\n\n</form>\n        </ModalBody>\n        <ModalFooter>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}","\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from \"redux/filter/filter-select\";\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow'; \n\nimport { getContacts } from \"redux/contacts/contatcs-selectors\";\nimport { Box, Flex, Text, IconButton, Portal } from \"@chakra-ui/react\";\nimport { CloseIcon,EditIcon } from \"@chakra-ui/icons\";\nimport { deleteContact } from 'redux/contacts/contacts-thunk';\nimport { isOpen } from 'redux/modal/modal-slice';\nimport { getIsOpen } from 'redux/modal/modal-select';\n\nexport const ContactList = () => {\nconst dispatch = useDispatch()\n    const contacts = useSelector(getContacts);\n\n    const filter = useSelector(getFilter);\n\n  const isOpenModal = useSelector(getIsOpen);\n    const filterContacts = () => {\n        return contacts?.filter(contact=>contact.name.toLowerCase().includes(filter))\n    }\n\nreturn (<>\n    <Flex direction=\"column\">\n      {filterContacts().map((contact) => (\n        <Box\n          key={contact.id}\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n              mb={4}\n              position=\"relative\"\n        >\n          <Box p={4}>\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {contact.name}\n            </Text>\n            <Text mt={2}>{contact.number}</Text>\n          </Box>\n                  <IconButton\n                      position='absolute'\n                      top=\"0\"\n                      right=\"0\"\n              icon={<CloseIcon />}\n              aria-label=\"Delete Contact\"\n              variant=\"ghost\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n          />\n          <IconButton\n            position='absolute'\n            bottom=\"0\"\n                      right=\"0\"\n              icon={<EditIcon/>}\n              aria-label=\"Delete Contact\"\n              variant=\"ghost\"\n              onClick={() => dispatch(isOpen())}\n          />\n           {isOpenModal && <Portal><ModalWindow id={contact.id} name={contact.name} number={contact.number} /></Portal>}\n        </Box>\n      ))}\n  </Flex>\n\n  \n       </>\n  );\n}\n","import { Input,Box,Text } from \"@chakra-ui/react\"\nimport { useDispatch } from \"react-redux\";\nimport { filter } from \"redux/filter/filter-slice\";\n\nexport const InputFilter = () => {\n    const dispatch = useDispatch();\n\n    const filterContacts = evt => {\n    const evtTarget = evt.currentTarget.value.toLowerCase();\n    dispatch(filter(evtTarget)) \n  }\n  \n    return (<Box p={4}>\n        <Text fontSize=\"xl\" mt={2}>Enter the name of the contact you are looking for:</Text>\n      <Input\n                onChange={filterContacts}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        placeholder=\"Search contacts\"\n        mb={4}\n      />     \n          </Box>\n        )\n}","import { useSelector, useDispatch } from \"react-redux\";\nimport { getUserName } from \"redux/auth/auth-selectors\"\nimport { Box, Heading, Spinner } from \"@chakra-ui/react\";\nimport { AddContactForm } from \"components/AddContacrForm/AddContacrForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { InputFilter } from \"components/InputFilter/InputFilter\";\nimport { getContacts, getIsLoading } from \"redux/contacts/contatcs-selectors\";\nimport { fetchAllContacts } from 'redux/contacts/contacts-thunk';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n    const name = useSelector(getUserName);\n    const loading = useSelector(getIsLoading);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchAllContacts());\n    }, [dispatch]);\n    const contacts = useSelector(getContacts);\n    return (<>\n\n        <AddContactForm />\n        {loading ? <>\n            <Box position=\"fixed\"\n        left=\"50%\"\n        transform=\"translate(-50%)\">\n        <Spinner thickness='4px'\n          speed='0.65s'\n          emptyColor='gray.200'\n          color='blue.500'\n          size='xl'\n        />\n      </Box>\n        </> : <>\n            <Heading textAlign=\"center\">Your contact list, {name}:</Heading>\n        <InputFilter />\n                {contacts?.length ?\n                    <ContactList /> :\n                    <Heading margin=\"20px\">Sorry, but you don't have contacts</Heading>}\n        </>}\n        \n         \n            \n    </>)\n}\n\n\n\nexport default Contacts"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","AddContactForm","useSelector","dispatch","useDispatch","textAlign","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","number","find","contact","Notify","addContact","reset","templateColumns","base","md","gap","colSpan","I","placeholder","type","title","pattern","getFilter","filter","getIsOpen","modal","ModalWindow","id","open","isOpen","onClose","editContact","defaultValue","mt","style","display","justifyContent","margin","colorScheme","variant","mr","onClick","ContactList","isOpenModal","direction","toLowerCase","includes","map","borderWidth","borderRadius","overflow","mb","position","p","fontSize","fontWeight","top","right","icon","deleteContact","bottom","InputFilter","onChange","evtTarget","getUserName","loading","useEffect","fetchAllContacts","left","transform","thickness","speed","emptyColor","color","size","length"],"sourceRoot":""}
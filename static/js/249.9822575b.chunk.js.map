{"version":3,"file":"static/js/249.9822575b.chunk.js","mappings":"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","sources":["redux/contacts/contatcs-selectors.js","components/AddContacrForm/AddContacrForm.jsx","redux/filter/filter-select.js","components/ContactList/ContactList.jsx","components/InputFilter/InputFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;","import { Grid, GridItem, Input, Button, Heading } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"redux/contacts/contatcs-selectors\";\nimport { addContact } from \"redux/contacts/contacts-thunk\";\nimport { Notify } from \"notiflix\";\n\nexport const AddContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget\n    const name = form.elements.name.value;\n   const number = form.elements.number.value;\n   if (!name || !number) {\n     Notify.failure('Sorry, but you didn&#180;t enter a value in the field')\n     return\n   }\n   if (contacts?.find(contact => contact.name === name)) {\n        Notify.info(`${name} is already in contacts.`);\n        return\n   }\n         dispatch(addContact({ name, number } ))\n    form.reset();\n\n\n\n  }\n\n\n    return (<>\n        <Heading textAlign=\"center\">Add contact to contacts list</Heading>\n    <form onSubmit={handleSubmit}>\n      <Grid\n        templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\" }}\n        gap={4}\n      >\n        <GridItem colSpan={{ base: \"auto\", md: 1 }}>\n          <Input\n        placeholder=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian,Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </GridItem>\n            <GridItem colSpan={{ base: \"auto\", md: 1 }}>\n          <Input\n              placeholder=\"Phone\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  />\n                  \n        </GridItem>\n        <GridItem textAlign=\"center\" colSpan={{ base: \"auto\", md: 2 }}>\n          <Button type=\"submit\">Add Contact</Button>\n        </GridItem>\n      </Grid>\n      </form>\n  </>\n  );\n}        ","export const getFilter = state => state.filter;","\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFilter } from \"redux/filter/filter-select\";\n\nimport { getContacts } from \"redux/contacts/contatcs-selectors\";\nimport { Box, Flex, Text, IconButton } from \"@chakra-ui/react\";\nimport { CloseIcon } from \"@chakra-ui/icons\";\nimport { deleteContact } from 'redux/contacts/contacts-thunk';\n\nexport const ContactList = () => {\nconst dispatch = useDispatch()\n    const contacts = useSelector(getContacts);\n\n    const filter = useSelector(getFilter);\n\n    const filterContacts = () => {\n        return contacts?.filter(contact=>contact.name.toLowerCase().includes(filter))\n    }\n\nreturn (\n    <Flex direction=\"column\">\n      {filterContacts().map((contact) => (\n        <Box\n          key={contact.id}\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n              mb={4}\n              position=\"relative\"\n        >\n          <Box p={4}>\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {contact.name}\n            </Text>\n            <Text mt={2}>{contact.number}</Text>\n          </Box>\n                  <IconButton\n                      position='absolute'\n                      top=\"50%\"\n                      right=\"0\"\n                      transform=\"translate(-50%, -50%)\"\n              icon={<CloseIcon />}\n              aria-label=\"Delete Contact\"\n              variant=\"ghost\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            />\n        </Box>\n      ))}\n    </Flex>\n  );\n}\n","import { Input,Box,Text } from \"@chakra-ui/react\"\nimport { useDispatch } from \"react-redux\";\nimport { filter } from \"redux/filter/filter-slice\";\n\nexport const InputFilter = () => {\n    const dispatch = useDispatch();\n\n    const filterContacts = evt => {\n    const evtTarget = evt.currentTarget.value.toLowerCase();\n    dispatch(filter(evtTarget)) \n  }\n  \n    return (<Box p={4}>\n        <Text fontSize=\"xl\" mt={2}>Enter the name of the contact you are looking for:</Text>\n      <Input\n                onChange={filterContacts}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        placeholder=\"Search contacts\"\n        mb={4}\n      />     \n          </Box>\n        )\n}","import { useSelector, useDispatch } from \"react-redux\";\nimport { getUserName } from \"redux/auth/auth-selectors\"\nimport { Box, Heading, Spinner } from \"@chakra-ui/react\";\nimport { AddContactForm } from \"components/AddContacrForm/AddContacrForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { InputFilter } from \"components/InputFilter/InputFilter\";\nimport { getContacts, getIsLoading } from \"redux/contacts/contatcs-selectors\";\nimport { fetchAllContacts } from 'redux/contacts/contacts-thunk';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n    const name = useSelector(getUserName);\n    const loading = useSelector(getIsLoading);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchAllContacts());\n    }, [dispatch]);\n    const contacts = useSelector(getContacts);\n    return (<>\n\n        <AddContactForm />\n        {loading ? <>\n            <Box position=\"fixed\"\n        left=\"50%\"\n        transform=\"translate(-50%)\">\n        <Spinner thickness='4px'\n          speed='0.65s'\n          emptyColor='gray.200'\n          color='blue.500'\n          size='xl'\n        />\n      </Box>\n        </> : <>\n            <Heading textAlign=\"center\">Your contact list, {name}:</Heading>\n        <InputFilter />\n                {contacts?.length ?\n                    <ContactList /> :\n                    <Heading margin=\"20px\">Sorry, but you don't have contacts</Heading>}\n        </>}\n        \n         \n            \n    </>)\n}\n\n\n\nexport default Contacts"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","AddContactForm","useSelector","dispatch","useDispatch","textAlign","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","number","find","contact","Notify","addContact","reset","templateColumns","base","md","gap","colSpan","I","placeholder","type","title","pattern","getFilter","filter","ContactList","direction","toLowerCase","includes","map","borderWidth","borderRadius","overflow","mb","position","p","fontSize","fontWeight","mt","top","right","transform","icon","variant","onClick","deleteContact","id","InputFilter","onChange","evtTarget","getUserName","loading","useEffect","fetchAllContacts","left","thickness","speed","emptyColor","color","size","length","margin"],"sourceRoot":""}